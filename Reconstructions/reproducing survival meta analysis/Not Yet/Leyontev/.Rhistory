"```{r, comment=NA}", '\n',
"eval(parse(text=paste0('survThief:::', '", i, "')))", '\n',
'```', '\n\n')
}
return(res)
}
cat(
'
',
make.tabs(functions),
sep = "",
file = "survThiefFunctions.Rmd")
knitr::opts_chunk$set(message = F, fig.align = "center")
library(epuRate)
library(rmarkdown)
library(knitr)
library(dplyr)
library(DT)
library(survival)
library(survminer)
f <- survfit(Surv(time, status) ~ x, data = leukemia)
ggsurvplot(f)
datatable(leukemia, rownames = F,
options = list(
pageLength = nrow(leukemia),
scrollY = "400px", dom = 't'
)
)
library(EBImage)
p <- "../Reconstructions/reproducing survival meta analysis/Reconstructed/Benrashid/Benrashid original.jpg"
img <- readImage(p)
display(img, method="browser")
load("dfSegmented.rds")
library(plotly)
dfSmall <- df[sample(1:nrow(df), 10000),]
library(shiny)
div(plot_ly(dfSmall, size = 0.1, x = ~red, y = ~green, z = ~blue,
marker = list(color = ~rgb(dfSmall$red, dfSmall$green, dfSmall$blue),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)'), align = "center")
div(plot_ly(dfSmall, size = 0.1, x = ~red, y = ~green, z = ~blue,
marker = list(color = ~rgb(dfSmall$R, dfSmall$G, dfSmall$B),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)'), align = "center")
load("sc.rds")
div(plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(sc@centers[sc@.Data, 1],
sc@centers[sc@.Data, 2],
sc@centers[sc@.Data, 3]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)'), align = "center")
load("dbscan.rds")
div(plot_ly(data.frame(s), size = 0.1, x = ~red, y = ~green, z = ~blue,
marker = list(color = ~rgb(s$centerRed, s$centerGreen, s$centerBlue),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)'), align = "center")
library(plotwidgets)
fundCols <- hsl2rgb(t(cbind(seq(360*1/12, 360*11/12, 360*2/12), 0.5, 0.5)))
background <- hsl2rgb(t(cbind(seq(1, 360), 0.5, 0.5)))
library(ggplot2)
ggplot() + geom_rect(aes(xmin=0:359, xmax=1:360, ymin=-1, ymax=0),
fill = rgb(t(background), maxColorValue = 255)) +
geom_rect(aes(xmin=seq(0, 300, 60), xmax=seq(60, 360, 60), ymin=0, ymax=1),
fill = rgb(t(fundCols), maxColorValue = 255)) +
theme_void()
magick::magick_config() %>% unlist %>% subset(. == T) %>% names
library(mvbutils)
library(survThief)
foodweb(where="package:survThief",
boxcolor = "#FC6512", textcolor = "black",
cex = 0.7, lwd=2)
p <- "../Reconstructions/reproducing survival meta analysis/Reconstructed"
myimages <- list.files(p, pattern = "original", full.names = TRUE, recursive = T)
library(knitr)
include_graphics(myimages)
p <- "../Reconstructions/reproducing survival meta analysis/Not Yet"
myimages <- list.files(p, pattern = "original", full.names = TRUE, recursive = T)
library(knitr)
include_graphics(myimages)
load("../Reconstructions/reproducing survival meta analysis/meta.RData")
colnames(d)[1] <- "time in months"
datatable(cbind(format(round(d[1], 4)), d[-1]),
editable = TRUE,rownames = F,
options = list(
pageLength = nrow(d),
scrollY = "400px", dom = 't'
)
)
colnames(d)[1] <- "time"
library(survival)
fit <- survfit(Surv(time, status) ~ stratum, data=d)
library(survminer)
KMPlot <- ggsurvplot(fit, risk.table = T, tables.theme = theme_cleantable(),
risk.table.col = "strata", RUEpval = TRUE,
ggtheme = theme_bw(), risk.table.y.text=F,
break.time.by=12)
KMPlot
load("weibFit.rds")
KMPlot$plot + geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_mean, group = treatment, color = treatment)) +
geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_95upper, group = treatment, color = treatment), linetype = "dotted") +
geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_95lower, group = treatment, color = treatment), linetype = "dotted")
library(DPWeibull)
library(DPWeibull)
library(fastDummies)
y <- as.matrix(d[1:2])
x <- as.matrix(cbind(1*(d$stratum == "open"),
dummy_cols(d$study, remove_first_dummy = T)[-1]))
weibModelCovs <- dpweib(y ~ x)
weibModelCovs$predtime
weibModelCovs$delta
weibModelCovs$S
weibModelCovs$alpharec
weibModelCovs$alpharec[1]
str(weibModelCovs$alpharec)
getwd()
save(weibModelCovs, file = "../Reconstructions/reproducing survival meta analysis/DDP.RData")
library(EBImage)
p <- "../Reconstructions/reproducing survival meta analysis/Reconstructed/Benrashid/Benrashid original.jpg"
img <- readImage(p)
display(img, method="browser")
library(survThief)
functions <- lsf.str("package:survThief")
setwd("/Users/gabrielbenedict/Google_Drive/docs/UNIS/KU Leuven/Courses/Master Thesis/March Presentation")
make.tabs <- function(functions){
res <- NULL
for(i in functions){
res <- c(res, '#### ', i, ' {-}', '\n',
"```{r, comment=NA}", '\n',
"eval(parse(text=paste0('survThief:::', '", i, "')))", '\n',
'```', '\n\n')
}
return(res)
}
cat(
'
',
make.tabs(functions),
sep = "",
file = "survThiefFunctions.Rmd")
setwd("/Users/gabrielbenedict/Google_Drive/docs/UNIS/KU Leuven/Courses/Master Thesis/Reconstructions/reproducing survival meta analysis/Reconstructed")
load("meta.RData")
setwd("/Users/gabrielbenedict/Google_Drive/docs/UNIS/KU Leuven/Courses/Master Thesis/Reconstructions/reproducing survival meta analysis/Reconstructed")
setwd("../")
load("meta.RData")
library(survival)
fit <- survfit(Surv(time, status) ~ stratum, data=d)
library(survminer)
ggsurvplot(fit, risk.table = T, tables.theme = theme_cleantable(),
risk.table.col = "strata", RUEpval = TRUE,
ggtheme = theme_bw(), risk.table.y.text=F,
break.time.by=12)
library(rstan)
stanData <-
list(
Nobs = sum(d$status == 1),
Ncen = sum(d$status == 0),
M_bg = 1,
yobs = d$time[d$status == 1],
ycen = d$time[d$status == 0],
Xobs_bg = matrix(as.numeric(d$stratum == "open")[d$status == 1]),
Xcen_bg = matrix(as.numeric(d$stratum == "hybrid")[d$status == 0])
)
load("weibFit.RData")
traceplot(stanWeibFit, par = c("alpha","mu","beta_bg"))
library(bayesplot)
mcmc_acf(as.matrix(stanWeibFit), pars = c("alpha","mu","beta_bg[1]"))
mcmc_areas(as.matrix(stanWeibFit), pars = c("alpha","mu","beta_bg[1]"), prob = 0.95)
knitr::opts_chunk$set(message = F, fig.align = "center")
library(epuRate)
library(rmarkdown)
library(knitr)
library(dplyr)
library(DT)
library(survival)
library(survminer)
load("../Reconstructions/reproducing survival meta analysis/weibFit.RData")
capture.output(stanWeibFit)
capture.output(stanWeibFit)[1:20]
s <- capture.output(stanWeibFit)
length(s)
s[length(s)/2]
s[length(s)/2 + 1]
s[length(s)/2:length(s)/2 + 10]
s[(length(s)/2) : (length(s)/2 + 10)]
paste0(s[1:10], s[(length(s)/2) : (length(s)/2 + 10)])
paste0(s[5:15], s[(length(s)/2) : (length(s)/2 + 10)])
s[1:5]
s[1:3]
paste0(s[5:15], s[(length(s)/2) : (length(s)/2 + 10)])
paste0(s[5], s[(length(s)/2)])
s[(length(s)/2)+1]
s[(length(s)/2)+4]
s[5]
paste0(s[6:15], s[(length(s)/2 + 1) : (length(s)/2 + 10)])
s[(length(s)/2 + 1) : (length(s)/2 + 10)]
sVars <- gsub("([A-Za-z]+).*", "\\1", s)
sVars
s <- capture.output(stanWeibFit)
s
sVars <- gsub("(\\w+)", "\\1", s)
sVars
library(stringr)
word(s, 1)
s[5]
word(s[6:length(s)], 1)
s[6:length(s)]
word(s[6:length(s)], 1)
print(stanWeibFit, pars = sVars[1:15])
sVars[1:15]
sVars <- word(s[6:length(s)], 1)
sVars[1:15]
print(stanWeibFit, pars = sVars[1:15])
install.packages("tclust")
library(imager)
path <- "/Users/gabrielbenedict/Google_Drive/docs/UNIS/KU Leuven/Courses/Master Thesis/Reconstructions/reproducing survival meta analysis/Reconstructed/Benrashid"
b <- load.image(paste0(path, "/Benrashid original.jpg"))
b <- b[,,1,]
df = data.frame(
red = matrix(b[,,1], ncol=1),
green = matrix(b[,,2], ncol=1),
blue = matrix(b[,,3], ncol=1)
)
m <- matrix(c(c(b[,,1]), c(b[,,2]), c(b[,,3])),
nrow = prod(dim(b)[-3]))
library(tclust)
s <- m[sample(1:nrow(m), 2000),]
tclust(s)
tc <- tclust(s)
tc <- tclust(s, 4)
tc <- tclust(s)
tc$centers
rbind(tc$centers, c(0,0,0))
cbind(tc$centers, c(0,0,0))
centers <- cbind(tc$centers, c(0,0,0))
tc$cluster
tc$cluster[tc$cluster == 0]
tc$cluster[tc$cluster == 0] <- 4
centers
centers[1,2]
tc <- tclust(s, 6)
tc$centers
tc <- tclust(s)
centers <- cbind(tc$centers, c(0,0,0))
centers
tc$cluster[tc$cluster == 0] <- 4
tc$cluster
div(plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)'), align = "center")
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
library(plotly)
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
centers <- cbind(tc$centers, c(1,0.8,0.5))
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, restr.fact = 1)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- 4
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 2, restr.fact = 1)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- 4
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc$cluster
centers
tc <- tclust(s, k = 2, restr.fact = 1)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 2)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 2, alpha = 0.01)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 3, alpha = 0.01)
centers <- cbind(tc$centers, c(1,0.8,0.5))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
centers <- cbind(tc$centers, c(1,0.8,0.2))
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
centers <- cbind(tc$centers, c(0.2,0.8,0.2))
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
s <- m[sample(1:nrow(m), 10000),]
tc <- tclust(s, k = 3, alpha = 0.01)
centers <- cbind(tc$centers, c(0.2,0.8,0.2))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
centers
s <- m[sample(1:nrow(m), 100000),]
tc <- tclust(s, k = 3, alpha = 0.01)
centers <- cbind(tc$centers, c(0.2,0.8,0.2))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 3, alpha = 0.01, restr = "eigen", restr.fact = 1)
centers <- cbind(tc$centers, c(0.2,0.8,0.2))
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
tc <- tclust(s, k = 3, alpha = 0.001, restr = "eigen", restr.fact = 1)
centers <- cbind(tc$centers, c(0.2,0.8,0.2))
centers
tc$cluster[tc$cluster == 0] <- ncol(tc$centers) + 1
plot_ly(data.frame(s), size = 0.1, x = ~X1, y = ~X2, z = ~X3,
marker = list(color = ~rgb(centers[1, tc$cluster],
centers[2, tc$cluster],
centers[3, tc$cluster]),
line = list(width = 0))) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'R'),
yaxis = list(title = 'G'),
zaxis = list(title = 'B'))) %>%
layout(paper_bgcolor='rgb(254, 247, 234)')
library(RColorBrewer)
myColors <- brewer.pal(2,"Set1")
names(myColors) <- levels(stanWeibFitSurvMean$treatment)
load("weibFit.rds")
names(myColors) <- levels(stanWeibFitSurvMean$treatment)
myColors
load("../Reconstructions/reproducing survival meta analysis/meta.RData")
library(survival)
fit <- survfit(Surv(time, status) ~ stratum, data=d)
library(survminer)
KMPlot <- ggsurvplot(fit, risk.table = T, tables.theme = theme_cleantable(),
risk.table.col = "strata", RUEpval = TRUE,
ggtheme = theme_bw(), risk.table.y.text=F,
break.time.by=12)
KMPlot$plot + geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_mean, group = treatment, color = treatment)) +
geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_95upper, group = treatment, color = treatment), linetype = "dotted") +
geom_line(data = stanWeibFitSurvMean,
mapping = aes(x = t,y = survival_95lower, group = treatment, color = treatment), linetype = "dotted") +
scale_colour_manual(name = "treatment",values = myColors)
??dpweib
??Weib
plot.dpweib
theta
density(theta)
plot(density(theta))
sum(o)
sum(p)
install.packages("LineSegmentDetector)
install.packages("LineSegmentDetector")
??image.LineSegmentDetector::image_line_segment_detector
??image_line_segment_detector
length(longEdge == commonLine)
length(vh)
