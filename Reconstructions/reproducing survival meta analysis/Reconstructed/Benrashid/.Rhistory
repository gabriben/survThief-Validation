str(img)
img$survData
traceback()
debug(spectrumBW)
n
c
h
image(spectr)
plot(spectr)
spectr[si,]
width
plot(spectr)
str(spectr)
head(spectr)
Q
debug(spectrumBW)
c
c
plot(spectr)
str(spectr)
head(spectr)
Q
readImg("Benrashid.jpg")
img <- readbitmap::read.bitmap("Benrashid.jpg")
str(img)
summary(img)
6 % 5
6%%5
simple <- img*1000 - img*1000 %% 5
rasterImage(simple, 0, 0, 1, 1)
rasterImage(simple/1000, 0, 0, 1, 1)
head(img)
tail(img)
img[50:60, 50:60,]
img[500:600, 50:60,]
n
1
2
q
length(clickData)
pTemp <- quantize("Benrashid.jpg")
rasterImage(pTemp, 0, 0, 1, 1)
rasterImage(pTemp[,,1,], 0, 0, 1, 1)
rasterImage(aperm(pTemp[,,1,], c(2,1,3)), 0, 0, 1, 1)
q()
n
0
108
40
100
traceback()
0
108
40
100
debug(adjCensored)
getwd()
str(clickData)
str(d)
head(d)
str(wlk)
clr
tail(d)
tail(d, 50)
d
c
print(c)
c
print(c)
head(d)
c
debug(rescale)
x1
x2
x3
y1
y2
d$survProb
d$survProb
d$survProb
y2[2] - y1[2]
y2[1]
y1[1]
y1
y2
(y2[2] - y1[2]) * 100/(y2[1] - y1[1])
y2[1] - y1[1])
y2[1] - y1[1]
100/(y2[1] - y1[1])
c
c
traceback()
debug(detectCensoring)
str(spectr)
imgV <- filter2(spectr, Svert)
str(imgV)
type(imgV)
class(imgV)
image(imgV)
n
c
head(d)
c
str(spectr)
c
undebug(detectCensoring)
debug(spectrumBW)
c
str(line)
image(line)
image(line[,,1,])
plot(as.cimg(line))
c
image(spectr)
c
c
c
c
image(spectr)
str(spectr)
width
h
str(spectr)
si
j
h
i
i
j
c
c
c
c
c
i
j
dim(spectr)
c
str(spectr)
image(spectr)
width
height
similarColour(img[i, (j - h):(j + h), 1, ], RGB, tol)
j - h
i
c
c
c
similarColour(img[i, (j - h):(j + h), 1, ], RGB, tol)
spectr[swi,]
spectr[si,]
si
i
similarColour(p[i, j, 1, ], RGB, tol)
i
j
image(spectr)
si
si
si
i
j
c
i
j
plot(line)
plot(as.cimg(line))
plot(img)
debug(censoredAtRisk)
print(c)
print(c)
print(c)
Q
undebug(censoredAtRisk)
debug(adjCensored)
print(c)
prev
prev
interval
interval
prev
index[i]
index
Q
undebug(adjCensored)
debug(getIndex)
d
print(c)
floor(temp$time) >= c$time[i]
floor(temp$time) >= c$time[i]
i <- 1
floor(temp$time) >= c$time[i]
i <- 2
floor(temp$time) >= c$time[i]
Q
debug(adjCensored)
index
interval
temp
print(c)
i
nrow(temp)
tooSmall
temp
print(c)
d
d[1:133,]
rownames(d) == "133"
which(rownames(d) == "133")
d[1:which(rownames(d) == "133")]
d[1:which(rownames(d) == "133"),]
d[1:which(rownames(d) == "133"),survProb == NA]
d[1:which(rownames(d) == "133"),"survProb"]
sum(d[1:which(rownames(d) == "133"),"survProb"] == "NA"
)
sum(d[1:which(rownames(d) == "133"),"survProb"] == NA)
sum(is.na(d[1:which(rownames(d) == "133"),"survProb"]))
sum(!is.na(d[1:which(rownames(d) == "133"),"survProb"]))
print(c)
d
i
i
i
i
i
nrow(c)
i
i
i
i
i
d
d[is.na(d$survProb), 3]
d[is.na(d$survProb), 3][1:55]
d[is.na(d$survProb), 3][1:54]
hist(d[is.na(d$survProb), 3][1:54])
prev
index[10]
index
last(index)
tail(index,1)
)
print(c)
Q
head(d)
n <- paste0("sim", "0", 1)
warnings()
0
300
0
100
0
300
0
100
traceback()
debug(censoredAtRisk)
0
300
0
100
index
Q
undebug(censoredAtRisk)
debug(getIndex)
0
300
0
100
d
print(c)
index
i
i
Q
undebug(getIndex)
debug(adjCensored)
0
300
0
100
traceback
traceback()
getwd()
0
300
0
100
traceback()
debug(censoredAtRisk)
index
i
index
index[i]
i
indexRow <- which(rownames(d) == rownames(d[index[3], ]))
indexRow
Q
traceback()
debug(adjCensored)
index
prev
prev
interval
i
prev
prev
as.numeric(index[length(index)])
i
i
interval <- d[which(rownames(d) == prev):which(rownames(d) == 
    index[i]), ]
d[which(rownames(d) == prev)
d[which(rownames(d) == prev),]
d
print(c)
which(rownames(d) == index[i])
Q
debug(getIndex)
print(c)
which((floor(temp$time) >= c$time[i]) == 
    T))
which((floor(temp$time) >= c$time[i]) == 
    T)
i
i
which((floor(temp$time) >= c$time[i]) == 
    T)
temp$time
c$time
d[index[2],]
min(which((floor(temp$time) >= c$time[i]) == T))
min(which((floor(temp$time) >= c$time[i]) == T)) == Inf
Q
debug(censoredAtRisk)
i
i
index
indexRow
index
d
i
print(c)
i
indexRow
index
print(c)
traceback()
debug(adjCensored)
i
i
i
i
i
d
print(c)
c$time
tail(c$time, 1)
tail(c$time, 1) < tail(d$time, 1)
Q
debug(detectCensoring)
image(imgV)
image(spectr)
Q
debug(detectCensoring)
imgae(spectr)
image(spectr)
Q
debug(spectrumBW)
image(line)
display(line)
display(as.cimg(line))
str(line)
as.cimg(line)
image(as.cimg(line))
display(as.cimg(line))
display(as.cimg(line[,,,-1,]))
display(as.cimg(line[,,-1,]))
display(line)
traceback()
image(line[,,1,])
Image(line)
display(Image(line))
Q
debug(detectCensoring)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
str(spectr)
Q
debug(spectrumBW)
str(spectr)
n
c
str(spectr)
h
c(rep(0, h), 1, rep(0, h))
str(c(rep(0, h), 1, rep(0, h)))
spectr[10,]
Q
undebug(spectrumBW)
debug(detectCensoring)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
image(spectr)
Q
debug(spectrumBW)
c
spectr[si,]
image(spectr)
spectr[si,]
spectr[si,]
spectr[si,]
si
image(spectr)
sum(line[i, j + 1, 1, ]) < 3)
sum(line[i, j + 1, 1, ]) < 3
sum(line[i, j, 1, ]) < 3
sum(line[i, j + 1, 1, ]) == 3
sum(line[i, j - 1, 1, ]) == 3
sum(line[i, j - 1, 1, ]) == 3
sum(line[i, j + 1, 1, ]) == 3
Q
debug(detectCensoring)
image(spectr)
debug(detectCensoring(
debug(detectCensoring)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
str(spectr)
Q
debug(spectrumBW)
str(line)
Q
debug(detectCensoring)
image(spectr)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
Q
debug(detectCensoring)
image(spectr)
Q
Q
undebug(detectCensoring)
traceback()
debug(adjCensored)
index
d
i
i
i
i
i
i
i
i
i
i
prev
which(rownames(d) == prev)
index[i]
prev
rownames(d)
d
index
prev
index
Q
index
d
print(c)
d
which(rownames(d) == prev)
i
index
Q
debug(adjCensored)
print(c)
c
print(c)
Q
undebug(adjCensored)
atRisk
atRisk
??image_line_segment_detector
install.packages("mclust")
getwd()
load("meta.RData")
getwd()
setwd("../reproducing survival meta analysis/Modelling/Weibull/")
